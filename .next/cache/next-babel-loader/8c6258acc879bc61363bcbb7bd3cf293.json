{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\next-route-issue\\\\pages\\\\[slug].js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Link from \"next/link\";\n\nconst Slug = ({\n  slug\n}) => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(Link, {\n    as: \"/page1\",\n    href: \"[slug]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, \"Page1\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), __jsx(Link, {\n    as: \"/page2\",\n    href: \"[slug]\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Page2\")), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }), \"Im in \", slug);\n};\n\nexport const getStaticPaths = async () => {\n  let paths;\n  const defaultValues = {\n    paths: [],\n    fallback: false\n  };\n\n  try {\n    const allSlugs = [\"page1\", \"page2\"];\n    paths = allSlugs.map(slug => \"/\" + slug);\n  } catch (e) {\n    console.log(e);\n    return defaultValues;\n  }\n\n  return {\n    paths,\n    fallback: false\n  };\n};\nexport const getStaticProps = async ({\n  params: {\n    slug\n  }\n}) => {\n  return {\n    props: {\n      slug\n    },\n    revalidate: 1\n  };\n};\nexport default Slug;","map":{"version":3,"sources":["D:/React/next-route-issue/pages/[slug].js"],"names":["React","Link","Slug","slug","getStaticPaths","paths","defaultValues","fallback","allSlugs","map","e","console","log","getStaticProps","params","props","revalidate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AACzB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAKE,MAAC,IAAD;AAAM,IAAA,EAAE,EAAC,QAAT;AAAkB,IAAA,IAAI,EAAC,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CALF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,YASSA,IATT,CADF;AAaD,CAdD;;AAgBA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,MAAIC,KAAJ;AACA,QAAMC,aAAa,GAAG;AACpBD,IAAAA,KAAK,EAAE,EADa;AAEpBE,IAAAA,QAAQ,EAAE;AAFU,GAAtB;;AAKA,MAAI;AACF,UAAMC,QAAQ,GAAG,CAAC,OAAD,EAAU,OAAV,CAAjB;AAEAH,IAAAA,KAAK,GAAGG,QAAQ,CAACC,GAAT,CAAcN,IAAD,IAAU,MAAMA,IAA7B,CAAR;AACD,GAJD,CAIE,OAAOO,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,WAAOJ,aAAP;AACD;;AAED,SAAO;AACLD,IAAAA,KADK;AAELE,IAAAA,QAAQ,EAAE;AAFL,GAAP;AAID,CApBM;AAsBP,OAAO,MAAMM,cAAc,GAAG,OAAO;AAAEC,EAAAA,MAAM,EAAE;AAAEX,IAAAA;AAAF;AAAV,CAAP,KAAgC;AAC5D,SAAO;AACLY,IAAAA,KAAK,EAAE;AACLZ,MAAAA;AADK,KADF;AAILa,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD,CAPM;AASP,eAAed,IAAf","sourcesContent":["import React from \"react\";\r\nimport Link from \"next/link\";\r\n\r\nconst Slug = ({ slug }) => {\r\n  return (\r\n    <div>\r\n      <Link as=\"/page1\" href=\"[slug]\">\r\n        <a>Page1</a>\r\n      </Link>\r\n      <br />\r\n      <Link as=\"/page2\" href=\"[slug]\">\r\n        <a>Page2</a>\r\n      </Link>\r\n      <br />\r\n      Im in {slug}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n  let paths;\r\n  const defaultValues = {\r\n    paths: [],\r\n    fallback: false,\r\n  };\r\n\r\n  try {\r\n    const allSlugs = [\"page1\", \"page2\"];\r\n\r\n    paths = allSlugs.map((slug) => \"/\" + slug);\r\n  } catch (e) {\r\n    console.log(e);\r\n    return defaultValues;\r\n  }\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n};\r\n\r\nexport const getStaticProps = async ({ params: { slug } }) => {\r\n  return {\r\n    props: {\r\n      slug,\r\n    },\r\n    revalidate: 1,\r\n  };\r\n};\r\n\r\nexport default Slug;\r\n"]},"metadata":{},"sourceType":"module"}